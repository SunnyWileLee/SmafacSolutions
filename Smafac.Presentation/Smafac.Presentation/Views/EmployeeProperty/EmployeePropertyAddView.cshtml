@model EmployeePropertyModel

@{
    var types = ViewData["types"] as IEnumerable<SelectListItem>;
    var isEdit = Model != null;
}

<form class="form-horizontal" id="form-submit">
    @if (isEdit)
    {
        @Html.HiddenFor(s => s.Id)
    }
    <div class="form-group">
        @Html.LabelFor(s => s.Name, new { @class = "col-lg-3 control-label" })
        <div class="col-lg-9">
            @Html.TextBoxFor(s => s.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(s => s.Type, new { @class = "col-lg-3 control-label" })
        <div class="col-lg-9">
            @Html.DropDownListFor(s => s.Type, types, "未知类型", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-lg-offset-3 col-lg-9">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(s => s.IsTableColumn)
                    显示在列表
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-lg-offset-3 col-lg-9">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(s => s.IsDeleteAssociations)
                    关联删除
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-lg-offset-3 col-lg-9">
            @{
                if (isEdit)
                {
                    <input type="button" value="保存" class="btn btn-success btn-submit" data-url="EditEmployeeProperty">
                }
                else
                {
                    <input type="button" value="新增" class="btn btn-success btn-submit" data-url="AddEmployeeProperty">
                }
            }
            <a class="btn btn-default" href="/Employee/EmployeeView" type="button">
                <i class="m-icon-swapleft m-icon-white"></i>
                返回列表
            </a>
        </div>
    </div>
</form>

