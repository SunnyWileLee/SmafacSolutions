@model OrderPageQueryModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categories = ViewData["categories"] as IEnumerable<SelectListItem>;
    var customers = ViewData["customers"] as IEnumerable<SelectListItem>;
}

<div>
    <form class="form-inline  inline-block" id="form-search" data-page="OrderPageView">
        <div class="form-group">
            @Html.LabelFor(s => s.CategoryId)
            @Html.DropDownListFor(s => s.CategoryId, categories, "全部", new { @class = "form-control input-search" })
        </div>
        <div class="form-group">
            @Html.LabelFor(s => s.CustomerId)
            @Html.DropDownListFor(s => s.CustomerId, customers, "全部", new { @class = "form-control input-search" })
        </div>
        <div class="form-group">
            <div class="btn-group">
                <button type="button" data-fromid="form-search" class="btn btn-primary btn-page">
                    <i class="icon-search"></i>
                    查询
                </button>
                <a class="btn btn-success" href="/OrderCategory/OrderCategoryView">
                    <i class="icon-plus"></i>
                    订单分类设置
                </a>
                <a class="btn btn-success" href="/OrderProperty/OrderPropertyView">
                    <i class="icon-plus"></i>
                    订单属性设置
                </a>
                <a class="btn btn-success" href="/OrderCharge/OrderChargeView">
                    <i class="icon-plus"></i>
                    订单费用设置
                </a>
            </div>
        </div>
    </form>
    <div id="table-container"></div>
    <div>
        <ul class="pagination" id="pagination-container"></ul>
    </div>
</div>
