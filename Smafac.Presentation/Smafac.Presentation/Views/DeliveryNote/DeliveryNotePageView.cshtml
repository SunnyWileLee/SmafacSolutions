@model IEnumerable<DeliveryNoteModel>

@{
    Layout = null;
    var tableColumns = ViewData["tableColumns"] as IEnumerable<CustomizedColumnModel>;
}

<table class="table table-condensed table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(s => s.CustomerName)</th>
            <th>@Html.DisplayNameFor(s => s.CategoryName)</th>
            <th>@Html.DisplayNameFor(s => s.Amount)</th>
            <th>@Html.DisplayNameFor(s => s.DeliveryTime)</th>
            <th>@Html.DisplayNameFor(s => s.Memo)</th>
            @{
                foreach (var column in tableColumns)
                {
                    <th>@column.Name</th>
                }
            }
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var note in Model)
            {
            <tr>
                <td>@note.CustomerName</td>
                <td>@note.CategoryName</td>
                <td>@note.Amount</td>
                <td>@note.DeliveryTime.ToShortDateString()</td>
                <td>@note.Memo</td>
                @{
                    foreach (var column in tableColumns)
                    {
                        var property = note.Properties.FirstOrDefault(s => s.PropertyId == column.Id);
                        var value = property == null ? ConstResources.TableColumnEmptyVlaue : property.Value;
                        <td>@value</td>
                    }
                }
                <td>
                    <div class="btn-group">
                        <a class="btn btn-default" href="/DeliveryNote/DeliveryNoteDetailView?noteId=@note.Id" type="button">详情</a>
                        <a class="btn btn-default" href="/Order/OrderAddView?noteId=@note.Id" type="button">下单</a>
                    </div>
                </td>
            </tr>
                    }
    </tbody>
</table>
